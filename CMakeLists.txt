# this is the build file for project HyperionEngine
# it is autogenerated by the xmake build system.
# do not edit by hand.

# project
cmake_minimum_required(VERSION 3.15.0)
cmake_policy(SET CMP0091 NEW)
project(HyperionEngine LANGUAGES CXX C)

# target
add_executable(Editor "")
set_target_properties(Editor PROPERTIES OUTPUT_NAME "Editor")
set_target_properties(Editor PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/binaries/target/windows/x64/debug")
add_dependencies(Editor Runtime glm spdlog)
target_include_directories(Editor PRIVATE
    Engine/Source/Runtime/Public
    Engine/Source/Runtime
    Engine/Source/Editor/Public
    Thirdparty/ImGui
    Thirdparty/GLFW/include
    Thirdparty/Glad/include
    Thirdparty/stb_image
    Thirdparty/glm
    Thirdparty/spdlog/include
)
target_compile_definitions(Editor PRIVATE
    HR_PLATFORM_WINDOWS
    HR_DEBUG
)
if(MSVC)
    target_compile_options(Editor PRIVATE -W3)
else()
    target_compile_options(Editor PRIVATE -Wall)
endif()
if(MSVC)
    target_compile_options(Editor PRIVATE /EHsc)
else()
    target_compile_options(Editor PRIVATE -fcxx-exceptions)
endif()
set_target_properties(Editor PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(Editor PRIVATE cxx_std_20)
if(MSVC)
    target_compile_options(Editor PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(Editor PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(Editor PRIVATE -Zi)
else()
    target_compile_options(Editor PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET Editor PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(Editor PRIVATE
    Runtime
    ImGui
    GLFW
    user32
    shell32
    Glad
    stb_image
    spdlog
    opengl32
    user32
    gdi32
)
target_link_directories(Editor PRIVATE
    binaries/target/windows/x64/debug
    binaries/target/windows/x64/debug
)
target_sources(Editor PRIVATE
    Engine/Source/Editor/Private/Layer/ExampleLayer.cpp
    Engine/Source/Editor/Editor.cpp
    Engine/Source/Editor/Public/Editor/Layer/ExampleLayer.hpp
)

# target
add_library(GLFW STATIC "")
set_target_properties(GLFW PROPERTIES OUTPUT_NAME "GLFW")
set_target_properties(GLFW PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/binaries/target/windows/x64/debug")
target_include_directories(GLFW PRIVATE
    Thirdparty/GLFW/include
)
target_include_directories(GLFW INTERFACE
    Thirdparty/GLFW/include
)
target_compile_definitions(GLFW PRIVATE
    _GLFW_WIN32
    _CRT_SECURE_NO_WARNINGS
)
target_compile_options(GLFW PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-O0>
    $<$<COMPILE_LANGUAGE:CXX>:-O0>
    $<$<COMPILE_LANGUAGE:C>:-g>
    $<$<COMPILE_LANGUAGE:CXX>:-g>
    $<$<COMPILE_LANGUAGE:C>:-D_DEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-D_DEBUG>
)
if(MSVC)
    target_compile_options(GLFW PRIVATE /EHsc)
else()
    target_compile_options(GLFW PRIVATE -fcxx-exceptions)
endif()
if(MSVC)
    set_property(TARGET GLFW PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(GLFW PRIVATE
    user32
    shell32
)
target_sources(GLFW PRIVATE
    Thirdparty/GLFW/src/context.c
    Thirdparty/GLFW/src/init.c
    Thirdparty/GLFW/src/input.c
    Thirdparty/GLFW/src/monitor.c
    Thirdparty/GLFW/src/platform.c
    Thirdparty/GLFW/src/vulkan.c
    Thirdparty/GLFW/src/window.c
    Thirdparty/GLFW/src/egl_context.c
    Thirdparty/GLFW/src/osmesa_context.c
    Thirdparty/GLFW/src/null_init.c
    Thirdparty/GLFW/src/null_monitor.c
    Thirdparty/GLFW/src/null_window.c
    Thirdparty/GLFW/src/null_joystick.c
    Thirdparty/GLFW/src/win32_init.c
    Thirdparty/GLFW/src/win32_module.c
    Thirdparty/GLFW/src/win32_joystick.c
    Thirdparty/GLFW/src/win32_monitor.c
    Thirdparty/GLFW/src/win32_time.c
    Thirdparty/GLFW/src/win32_thread.c
    Thirdparty/GLFW/src/win32_window.c
    Thirdparty/GLFW/src/wgl_context.c
    Thirdparty/GLFW/include/GLFW/glfw3.h
    Thirdparty/GLFW/src/internal.h
    Thirdparty/GLFW/src/platform.h
    Thirdparty/GLFW/src/mappings.h
    Thirdparty/GLFW/src/null_platform.h
    Thirdparty/GLFW/src/null_joystick.h
    Thirdparty/GLFW/include/GLFW/glfw3native.h
    Thirdparty/GLFW/src/win32_time.h
    Thirdparty/GLFW/src/win32_thread.h
)

# target
add_library(Glad STATIC "")
set_target_properties(Glad PROPERTIES OUTPUT_NAME "Glad")
set_target_properties(Glad PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/binaries/target/windows/x64/debug")
target_include_directories(Glad PRIVATE
    Thirdparty/Glad/include
)
target_include_directories(Glad INTERFACE
    Thirdparty/Glad/include
)
target_compile_definitions(Glad PRIVATE
    _CRT_SECURE_NO_WARNINGS
)
if(MSVC)
    target_compile_options(Glad PRIVATE /EHsc)
else()
    target_compile_options(Glad PRIVATE -fcxx-exceptions)
endif()
set_target_properties(Glad PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(Glad PRIVATE c_std_11)
if(MSVC)
    set_property(TARGET Glad PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(Glad PRIVATE
    user32
    gdi32
)
target_sources(Glad PRIVATE
    Thirdparty/Glad/src/glad.c
    Thirdparty/Glad/include/glad/glad.h
    Thirdparty/Glad/include/KHR/khrplatform.h
)

# target
add_library(ImGui STATIC "")
set_target_properties(ImGui PROPERTIES OUTPUT_NAME "ImGui")
set_target_properties(ImGui PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/binaries/target/windows/x64/debug")
target_include_directories(ImGui PRIVATE
    Thirdparty/ImGui
)
target_include_directories(ImGui INTERFACE
    Thirdparty/ImGui
)
target_compile_definitions(ImGui PRIVATE
    _CRT_SECURE_NO_WARNINGS
)
if(MSVC)
    target_compile_options(ImGui PRIVATE /EHsc)
else()
    target_compile_options(ImGui PRIVATE -fcxx-exceptions)
endif()
set_target_properties(ImGui PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(ImGui PRIVATE cxx_std_17)
if(MSVC)
    set_property(TARGET ImGui PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(ImGui PRIVATE
    Thirdparty/ImGui/imgui.cpp
    Thirdparty/ImGui/imgui_draw.cpp
    Thirdparty/ImGui/imgui_tables.cpp
    Thirdparty/ImGui/imgui_widgets.cpp
    Thirdparty/ImGui/imgui_demo.cpp
    Thirdparty/ImGui/imconfig.h
    Thirdparty/ImGui/imgui.h
    Thirdparty/ImGui/imgui_internal.h
    Thirdparty/ImGui/imstb_rectpack.h
    Thirdparty/ImGui/imstb_textedit.h
    Thirdparty/ImGui/imstb_truetype.h
)

# target
add_library(Runtime STATIC "")
set_target_properties(Runtime PROPERTIES OUTPUT_NAME "Runtime")
set_target_properties(Runtime PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/binaries/target/windows/x64/debug")
add_dependencies(Runtime ImGui GLFW Glad stb_image glm spdlog)
target_precompile_headers(Runtime PRIVATE
    $<$<COMPILE_LANGUAGE:CXX>:${CMAKE_CURRENT_SOURCE_DIR}/binaries/.gens/Runtime/windows/x64/debug/Engine/Source/Runtime/pch.hpp>
)
target_include_directories(Runtime PRIVATE
    Engine/Source/Runtime
    Engine/Source/Runtime/Public
    Thirdparty/ImGui
    Thirdparty/GLFW/include
    Thirdparty/Glad/include
    Thirdparty/stb_image
    Thirdparty/glm
    Thirdparty/spdlog/include
)
target_compile_definitions(Runtime PRIVATE
    _CRT_SECURE_NO_WARNINGS
    HR_PLATFORM_WINDOWS
    HR_BUILD_DLL
    GLFW_INCLUDE_NONE
    HR_DEBUG
)
if(MSVC)
    target_compile_options(Runtime PRIVATE -W3)
else()
    target_compile_options(Runtime PRIVATE -Wall)
endif()
if(MSVC)
    target_compile_options(Runtime PRIVATE /EHsc)
else()
    target_compile_options(Runtime PRIVATE -fcxx-exceptions)
endif()
set_target_properties(Runtime PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(Runtime PRIVATE cxx_std_20)
if(MSVC)
    target_compile_options(Runtime PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(Runtime PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(Runtime PRIVATE -Zi)
else()
    target_compile_options(Runtime PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET Runtime PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(Runtime PRIVATE
    ImGui
    GLFW
    user32
    shell32
    Glad
    stb_image
    spdlog
    opengl32
    user32
    gdi32
)
target_link_directories(Runtime PRIVATE
    binaries/target/windows/x64/debug
    binaries/target/windows/x64/debug
)
target_sources(Runtime PRIVATE
    Engine/Source/Runtime/Private/Core/Application.cpp
    Engine/Source/Runtime/Private/Core/Layer.cpp
    Engine/Source/Runtime/Private/Core/LayerStack.cpp
    Engine/Source/Runtime/Private/Core/Log.cpp
    Engine/Source/Runtime/Private/Renderer/Buffer.cpp
    Engine/Source/Runtime/Private/Renderer/OrthographicCamera.cpp
    Engine/Source/Runtime/Private/Renderer/RenderCommand.cpp
    Engine/Source/Runtime/Private/Renderer/Renderer.cpp
    Engine/Source/Runtime/Private/Renderer/RendererAPI.cpp
    Engine/Source/Runtime/Private/Renderer/Shader.cpp
    Engine/Source/Runtime/Private/Renderer/Texture.cpp
    Engine/Source/Runtime/Private/Renderer/VertexArray.cpp
    Engine/Source/Runtime/Private/RHI/OpenGL/OpenGLBuffer.cpp
    Engine/Source/Runtime/Private/RHI/OpenGL/OpenGLContext.cpp
    Engine/Source/Runtime/Private/RHI/OpenGL/OpenGLRendererAPI.cpp
    Engine/Source/Runtime/Private/RHI/OpenGL/OpenGLShader.cpp
    Engine/Source/Runtime/Private/RHI/OpenGL/OpenGLTexture.cpp
    Engine/Source/Runtime/Private/RHI/OpenGL/OpenGLVertexArray.cpp
    Engine/Source/Runtime/Private/RHI/Windows/WindowsInput.cpp
    Engine/Source/Runtime/Private/RHI/Windows/WindowsWindow.cpp
    Engine/Source/Runtime/Private/UI/ImGuiBuild.cpp
    Engine/Source/Runtime/Private/UI/ImGuiLayer.cpp
    Engine/Source/Runtime/pch.cpp
    Engine/Source/Runtime/Public/Runtime/Core/Application.hpp
    Engine/Source/Runtime/Public/Runtime/Core/Core.hpp
    Engine/Source/Runtime/Public/Runtime/Core/Input.hpp
    Engine/Source/Runtime/Public/Runtime/Core/KeyCodes.hpp
    Engine/Source/Runtime/Public/Runtime/Core/Layer.hpp
    Engine/Source/Runtime/Public/Runtime/Core/LayerStack.hpp
    Engine/Source/Runtime/Public/Runtime/Core/Log.hpp
    Engine/Source/Runtime/Public/Runtime/Core/MouseButtonCodes.hpp
    Engine/Source/Runtime/Public/Runtime/Core/Timestep.hpp
    Engine/Source/Runtime/Public/Runtime/Core/Window.hpp
    Engine/Source/Runtime/Public/Runtime/Events/ApplicationEvent.hpp
    Engine/Source/Runtime/Public/Runtime/Events/Event.hpp
    Engine/Source/Runtime/Public/Runtime/Events/KeyEvent.hpp
    Engine/Source/Runtime/Public/Runtime/Events/MouseEvent.hpp
    Engine/Source/Runtime/Public/Runtime/Renderer/Buffer.hpp
    Engine/Source/Runtime/Public/Runtime/Renderer/GraphicsContext.hpp
    Engine/Source/Runtime/Public/Runtime/Renderer/OrthographicCamera.hpp
    Engine/Source/Runtime/Public/Runtime/Renderer/RenderCommand.hpp
    Engine/Source/Runtime/Public/Runtime/Renderer/Renderer.hpp
    Engine/Source/Runtime/Public/Runtime/Renderer/RendererAPI.hpp
    Engine/Source/Runtime/Public/Runtime/Renderer/Shader.hpp
    Engine/Source/Runtime/Public/Runtime/Renderer/Texture.hpp
    Engine/Source/Runtime/Public/Runtime/Renderer/VertexArray.hpp
    Engine/Source/Runtime/Public/Runtime/RHI/OpenGL/OpenGLBuffer.hpp
    Engine/Source/Runtime/Public/Runtime/RHI/OpenGL/OpenGLContext.hpp
    Engine/Source/Runtime/Public/Runtime/RHI/OpenGL/OpenGLRendererAPI.hpp
    Engine/Source/Runtime/Public/Runtime/RHI/OpenGL/OpenGLShader.hpp
    Engine/Source/Runtime/Public/Runtime/RHI/OpenGL/OpenGLTexure.hpp
    Engine/Source/Runtime/Public/Runtime/RHI/OpenGL/OpenGLVertexArray.hpp
    Engine/Source/Runtime/Public/Runtime/RHI/Windows/WindowsInput.hpp
    Engine/Source/Runtime/Public/Runtime/RHI/Windows/WindowsWindow.hpp
    Engine/Source/Runtime/Public/Runtime/UI/ImGuiLayer.hpp
    Engine/Source/Runtime/Hyperion.hpp
    Engine/Source/Runtime/pch.hpp
)

# target
add_library(glm STATIC "")
set_target_properties(glm PROPERTIES OUTPUT_NAME "glm")
set_target_properties(glm PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/binaries/target/windows/x64/debug")
target_include_directories(glm PRIVATE
    Thirdparty/glm
)
target_include_directories(glm INTERFACE
    Thirdparty/glm
)
target_compile_options(glm PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-D_DEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-D_DEBUG>
)
if(MSVC)
    set_property(TARGET glm PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(glm PRIVATE
    Thirdparty/glm/glm/common.hpp
    Thirdparty/glm/glm/detail/compute_common.hpp
    Thirdparty/glm/glm/detail/compute_vector_relational.hpp
    Thirdparty/glm/glm/detail/qualifier.hpp
    Thirdparty/glm/glm/detail/setup.hpp
    Thirdparty/glm/glm/detail/type_float.hpp
    Thirdparty/glm/glm/detail/type_half.hpp
    Thirdparty/glm/glm/detail/type_mat2x2.hpp
    Thirdparty/glm/glm/detail/type_mat2x3.hpp
    Thirdparty/glm/glm/detail/type_mat2x4.hpp
    Thirdparty/glm/glm/detail/type_mat3x2.hpp
    Thirdparty/glm/glm/detail/type_mat3x3.hpp
    Thirdparty/glm/glm/detail/type_mat3x4.hpp
    Thirdparty/glm/glm/detail/type_mat4x2.hpp
    Thirdparty/glm/glm/detail/type_mat4x3.hpp
    Thirdparty/glm/glm/detail/type_mat4x4.hpp
    Thirdparty/glm/glm/detail/type_quat.hpp
    Thirdparty/glm/glm/detail/type_vec1.hpp
    Thirdparty/glm/glm/detail/type_vec2.hpp
    Thirdparty/glm/glm/detail/type_vec3.hpp
    Thirdparty/glm/glm/detail/type_vec4.hpp
    Thirdparty/glm/glm/detail/_features.hpp
    Thirdparty/glm/glm/detail/_fixes.hpp
    Thirdparty/glm/glm/detail/_noise.hpp
    Thirdparty/glm/glm/detail/_swizzle.hpp
    Thirdparty/glm/glm/detail/_swizzle_func.hpp
    Thirdparty/glm/glm/detail/_vectorize.hpp
    Thirdparty/glm/glm/exponential.hpp
    Thirdparty/glm/glm/ext/matrix_clip_space.hpp
    Thirdparty/glm/glm/ext/matrix_common.hpp
    Thirdparty/glm/glm/ext/matrix_double2x2.hpp
    Thirdparty/glm/glm/ext/matrix_double2x2_precision.hpp
    Thirdparty/glm/glm/ext/matrix_double2x3.hpp
    Thirdparty/glm/glm/ext/matrix_double2x3_precision.hpp
    Thirdparty/glm/glm/ext/matrix_double2x4.hpp
    Thirdparty/glm/glm/ext/matrix_double2x4_precision.hpp
    Thirdparty/glm/glm/ext/matrix_double3x2.hpp
    Thirdparty/glm/glm/ext/matrix_double3x2_precision.hpp
    Thirdparty/glm/glm/ext/matrix_double3x3.hpp
    Thirdparty/glm/glm/ext/matrix_double3x3_precision.hpp
    Thirdparty/glm/glm/ext/matrix_double3x4.hpp
    Thirdparty/glm/glm/ext/matrix_double3x4_precision.hpp
    Thirdparty/glm/glm/ext/matrix_double4x2.hpp
    Thirdparty/glm/glm/ext/matrix_double4x2_precision.hpp
    Thirdparty/glm/glm/ext/matrix_double4x3.hpp
    Thirdparty/glm/glm/ext/matrix_double4x3_precision.hpp
    Thirdparty/glm/glm/ext/matrix_double4x4.hpp
    Thirdparty/glm/glm/ext/matrix_double4x4_precision.hpp
    Thirdparty/glm/glm/ext/matrix_float2x2.hpp
    Thirdparty/glm/glm/ext/matrix_float2x2_precision.hpp
    Thirdparty/glm/glm/ext/matrix_float2x3.hpp
    Thirdparty/glm/glm/ext/matrix_float2x3_precision.hpp
    Thirdparty/glm/glm/ext/matrix_float2x4.hpp
    Thirdparty/glm/glm/ext/matrix_float2x4_precision.hpp
    Thirdparty/glm/glm/ext/matrix_float3x2.hpp
    Thirdparty/glm/glm/ext/matrix_float3x2_precision.hpp
    Thirdparty/glm/glm/ext/matrix_float3x3.hpp
    Thirdparty/glm/glm/ext/matrix_float3x3_precision.hpp
    Thirdparty/glm/glm/ext/matrix_float3x4.hpp
    Thirdparty/glm/glm/ext/matrix_float3x4_precision.hpp
    Thirdparty/glm/glm/ext/matrix_float4x2.hpp
    Thirdparty/glm/glm/ext/matrix_float4x2_precision.hpp
    Thirdparty/glm/glm/ext/matrix_float4x3.hpp
    Thirdparty/glm/glm/ext/matrix_float4x3_precision.hpp
    Thirdparty/glm/glm/ext/matrix_float4x4.hpp
    Thirdparty/glm/glm/ext/matrix_float4x4_precision.hpp
    Thirdparty/glm/glm/ext/matrix_int2x2.hpp
    Thirdparty/glm/glm/ext/matrix_int2x2_sized.hpp
    Thirdparty/glm/glm/ext/matrix_int2x3.hpp
    Thirdparty/glm/glm/ext/matrix_int2x3_sized.hpp
    Thirdparty/glm/glm/ext/matrix_int2x4.hpp
    Thirdparty/glm/glm/ext/matrix_int2x4_sized.hpp
    Thirdparty/glm/glm/ext/matrix_int3x2.hpp
    Thirdparty/glm/glm/ext/matrix_int3x2_sized.hpp
    Thirdparty/glm/glm/ext/matrix_int3x3.hpp
    Thirdparty/glm/glm/ext/matrix_int3x3_sized.hpp
    Thirdparty/glm/glm/ext/matrix_int3x4.hpp
    Thirdparty/glm/glm/ext/matrix_int3x4_sized.hpp
    Thirdparty/glm/glm/ext/matrix_int4x2.hpp
    Thirdparty/glm/glm/ext/matrix_int4x2_sized.hpp
    Thirdparty/glm/glm/ext/matrix_int4x3.hpp
    Thirdparty/glm/glm/ext/matrix_int4x3_sized.hpp
    Thirdparty/glm/glm/ext/matrix_int4x4.hpp
    Thirdparty/glm/glm/ext/matrix_int4x4_sized.hpp
    Thirdparty/glm/glm/ext/matrix_integer.hpp
    Thirdparty/glm/glm/ext/matrix_projection.hpp
    Thirdparty/glm/glm/ext/matrix_relational.hpp
    Thirdparty/glm/glm/ext/matrix_transform.hpp
    Thirdparty/glm/glm/ext/matrix_uint2x2.hpp
    Thirdparty/glm/glm/ext/matrix_uint2x2_sized.hpp
    Thirdparty/glm/glm/ext/matrix_uint2x3.hpp
    Thirdparty/glm/glm/ext/matrix_uint2x3_sized.hpp
    Thirdparty/glm/glm/ext/matrix_uint2x4.hpp
    Thirdparty/glm/glm/ext/matrix_uint2x4_sized.hpp
    Thirdparty/glm/glm/ext/matrix_uint3x2.hpp
    Thirdparty/glm/glm/ext/matrix_uint3x2_sized.hpp
    Thirdparty/glm/glm/ext/matrix_uint3x3.hpp
    Thirdparty/glm/glm/ext/matrix_uint3x3_sized.hpp
    Thirdparty/glm/glm/ext/matrix_uint3x4.hpp
    Thirdparty/glm/glm/ext/matrix_uint3x4_sized.hpp
    Thirdparty/glm/glm/ext/matrix_uint4x2.hpp
    Thirdparty/glm/glm/ext/matrix_uint4x2_sized.hpp
    Thirdparty/glm/glm/ext/matrix_uint4x3.hpp
    Thirdparty/glm/glm/ext/matrix_uint4x3_sized.hpp
    Thirdparty/glm/glm/ext/matrix_uint4x4.hpp
    Thirdparty/glm/glm/ext/matrix_uint4x4_sized.hpp
    Thirdparty/glm/glm/ext/quaternion_common.hpp
    Thirdparty/glm/glm/ext/quaternion_double.hpp
    Thirdparty/glm/glm/ext/quaternion_double_precision.hpp
    Thirdparty/glm/glm/ext/quaternion_exponential.hpp
    Thirdparty/glm/glm/ext/quaternion_float.hpp
    Thirdparty/glm/glm/ext/quaternion_float_precision.hpp
    Thirdparty/glm/glm/ext/quaternion_geometric.hpp
    Thirdparty/glm/glm/ext/quaternion_relational.hpp
    Thirdparty/glm/glm/ext/quaternion_transform.hpp
    Thirdparty/glm/glm/ext/quaternion_trigonometric.hpp
    Thirdparty/glm/glm/ext/scalar_common.hpp
    Thirdparty/glm/glm/ext/scalar_constants.hpp
    Thirdparty/glm/glm/ext/scalar_integer.hpp
    Thirdparty/glm/glm/ext/scalar_int_sized.hpp
    Thirdparty/glm/glm/ext/scalar_packing.hpp
    Thirdparty/glm/glm/ext/scalar_reciprocal.hpp
    Thirdparty/glm/glm/ext/scalar_relational.hpp
    Thirdparty/glm/glm/ext/scalar_uint_sized.hpp
    Thirdparty/glm/glm/ext/scalar_ulp.hpp
    Thirdparty/glm/glm/ext/vector_bool1.hpp
    Thirdparty/glm/glm/ext/vector_bool1_precision.hpp
    Thirdparty/glm/glm/ext/vector_bool2.hpp
    Thirdparty/glm/glm/ext/vector_bool2_precision.hpp
    Thirdparty/glm/glm/ext/vector_bool3.hpp
    Thirdparty/glm/glm/ext/vector_bool3_precision.hpp
    Thirdparty/glm/glm/ext/vector_bool4.hpp
    Thirdparty/glm/glm/ext/vector_bool4_precision.hpp
    Thirdparty/glm/glm/ext/vector_common.hpp
    Thirdparty/glm/glm/ext/vector_double1.hpp
    Thirdparty/glm/glm/ext/vector_double1_precision.hpp
    Thirdparty/glm/glm/ext/vector_double2.hpp
    Thirdparty/glm/glm/ext/vector_double2_precision.hpp
    Thirdparty/glm/glm/ext/vector_double3.hpp
    Thirdparty/glm/glm/ext/vector_double3_precision.hpp
    Thirdparty/glm/glm/ext/vector_double4.hpp
    Thirdparty/glm/glm/ext/vector_double4_precision.hpp
    Thirdparty/glm/glm/ext/vector_float1.hpp
    Thirdparty/glm/glm/ext/vector_float1_precision.hpp
    Thirdparty/glm/glm/ext/vector_float2.hpp
    Thirdparty/glm/glm/ext/vector_float2_precision.hpp
    Thirdparty/glm/glm/ext/vector_float3.hpp
    Thirdparty/glm/glm/ext/vector_float3_precision.hpp
    Thirdparty/glm/glm/ext/vector_float4.hpp
    Thirdparty/glm/glm/ext/vector_float4_precision.hpp
    Thirdparty/glm/glm/ext/vector_int1.hpp
    Thirdparty/glm/glm/ext/vector_int1_sized.hpp
    Thirdparty/glm/glm/ext/vector_int2.hpp
    Thirdparty/glm/glm/ext/vector_int2_sized.hpp
    Thirdparty/glm/glm/ext/vector_int3.hpp
    Thirdparty/glm/glm/ext/vector_int3_sized.hpp
    Thirdparty/glm/glm/ext/vector_int4.hpp
    Thirdparty/glm/glm/ext/vector_int4_sized.hpp
    Thirdparty/glm/glm/ext/vector_integer.hpp
    Thirdparty/glm/glm/ext/vector_packing.hpp
    Thirdparty/glm/glm/ext/vector_reciprocal.hpp
    Thirdparty/glm/glm/ext/vector_relational.hpp
    Thirdparty/glm/glm/ext/vector_uint1.hpp
    Thirdparty/glm/glm/ext/vector_uint1_sized.hpp
    Thirdparty/glm/glm/ext/vector_uint2.hpp
    Thirdparty/glm/glm/ext/vector_uint2_sized.hpp
    Thirdparty/glm/glm/ext/vector_uint3.hpp
    Thirdparty/glm/glm/ext/vector_uint3_sized.hpp
    Thirdparty/glm/glm/ext/vector_uint4.hpp
    Thirdparty/glm/glm/ext/vector_uint4_sized.hpp
    Thirdparty/glm/glm/ext/vector_ulp.hpp
    Thirdparty/glm/glm/ext/_matrix_vectorize.hpp
    Thirdparty/glm/glm/ext.hpp
    Thirdparty/glm/glm/fwd.hpp
    Thirdparty/glm/glm/geometric.hpp
    Thirdparty/glm/glm/glm.hpp
    Thirdparty/glm/glm/gtc/bitfield.hpp
    Thirdparty/glm/glm/gtc/color_space.hpp
    Thirdparty/glm/glm/gtc/constants.hpp
    Thirdparty/glm/glm/gtc/epsilon.hpp
    Thirdparty/glm/glm/gtc/integer.hpp
    Thirdparty/glm/glm/gtc/matrix_access.hpp
    Thirdparty/glm/glm/gtc/matrix_integer.hpp
    Thirdparty/glm/glm/gtc/matrix_inverse.hpp
    Thirdparty/glm/glm/gtc/matrix_transform.hpp
    Thirdparty/glm/glm/gtc/noise.hpp
    Thirdparty/glm/glm/gtc/packing.hpp
    Thirdparty/glm/glm/gtc/quaternion.hpp
    Thirdparty/glm/glm/gtc/random.hpp
    Thirdparty/glm/glm/gtc/reciprocal.hpp
    Thirdparty/glm/glm/gtc/round.hpp
    Thirdparty/glm/glm/gtc/type_aligned.hpp
    Thirdparty/glm/glm/gtc/type_precision.hpp
    Thirdparty/glm/glm/gtc/type_ptr.hpp
    Thirdparty/glm/glm/gtc/ulp.hpp
    Thirdparty/glm/glm/gtc/vec1.hpp
    Thirdparty/glm/glm/gtx/associated_min_max.hpp
    Thirdparty/glm/glm/gtx/bit.hpp
    Thirdparty/glm/glm/gtx/closest_point.hpp
    Thirdparty/glm/glm/gtx/color_encoding.hpp
    Thirdparty/glm/glm/gtx/color_space.hpp
    Thirdparty/glm/glm/gtx/color_space_YCoCg.hpp
    Thirdparty/glm/glm/gtx/common.hpp
    Thirdparty/glm/glm/gtx/compatibility.hpp
    Thirdparty/glm/glm/gtx/component_wise.hpp
    Thirdparty/glm/glm/gtx/dual_quaternion.hpp
    Thirdparty/glm/glm/gtx/easing.hpp
    Thirdparty/glm/glm/gtx/euler_angles.hpp
    Thirdparty/glm/glm/gtx/extend.hpp
    Thirdparty/glm/glm/gtx/extended_min_max.hpp
    Thirdparty/glm/glm/gtx/exterior_product.hpp
    Thirdparty/glm/glm/gtx/fast_exponential.hpp
    Thirdparty/glm/glm/gtx/fast_square_root.hpp
    Thirdparty/glm/glm/gtx/fast_trigonometry.hpp
    Thirdparty/glm/glm/gtx/functions.hpp
    Thirdparty/glm/glm/gtx/gradient_paint.hpp
    Thirdparty/glm/glm/gtx/handed_coordinate_space.hpp
    Thirdparty/glm/glm/gtx/hash.hpp
    Thirdparty/glm/glm/gtx/integer.hpp
    Thirdparty/glm/glm/gtx/intersect.hpp
    Thirdparty/glm/glm/gtx/io.hpp
    Thirdparty/glm/glm/gtx/log_base.hpp
    Thirdparty/glm/glm/gtx/matrix_cross_product.hpp
    Thirdparty/glm/glm/gtx/matrix_decompose.hpp
    Thirdparty/glm/glm/gtx/matrix_factorisation.hpp
    Thirdparty/glm/glm/gtx/matrix_interpolation.hpp
    Thirdparty/glm/glm/gtx/matrix_major_storage.hpp
    Thirdparty/glm/glm/gtx/matrix_operation.hpp
    Thirdparty/glm/glm/gtx/matrix_query.hpp
    Thirdparty/glm/glm/gtx/matrix_transform_2d.hpp
    Thirdparty/glm/glm/gtx/mixed_product.hpp
    Thirdparty/glm/glm/gtx/norm.hpp
    Thirdparty/glm/glm/gtx/normal.hpp
    Thirdparty/glm/glm/gtx/normalize_dot.hpp
    Thirdparty/glm/glm/gtx/number_precision.hpp
    Thirdparty/glm/glm/gtx/optimum_pow.hpp
    Thirdparty/glm/glm/gtx/orthonormalize.hpp
    Thirdparty/glm/glm/gtx/pca.hpp
    Thirdparty/glm/glm/gtx/perpendicular.hpp
    Thirdparty/glm/glm/gtx/polar_coordinates.hpp
    Thirdparty/glm/glm/gtx/projection.hpp
    Thirdparty/glm/glm/gtx/quaternion.hpp
    Thirdparty/glm/glm/gtx/range.hpp
    Thirdparty/glm/glm/gtx/raw_data.hpp
    Thirdparty/glm/glm/gtx/rotate_normalized_axis.hpp
    Thirdparty/glm/glm/gtx/rotate_vector.hpp
    Thirdparty/glm/glm/gtx/scalar_multiplication.hpp
    Thirdparty/glm/glm/gtx/scalar_relational.hpp
    Thirdparty/glm/glm/gtx/spline.hpp
    Thirdparty/glm/glm/gtx/std_based_type.hpp
    Thirdparty/glm/glm/gtx/string_cast.hpp
    Thirdparty/glm/glm/gtx/texture.hpp
    Thirdparty/glm/glm/gtx/transform.hpp
    Thirdparty/glm/glm/gtx/transform2.hpp
    Thirdparty/glm/glm/gtx/type_aligned.hpp
    Thirdparty/glm/glm/gtx/type_trait.hpp
    Thirdparty/glm/glm/gtx/vector_angle.hpp
    Thirdparty/glm/glm/gtx/vector_query.hpp
    Thirdparty/glm/glm/gtx/vec_swizzle.hpp
    Thirdparty/glm/glm/gtx/wrap.hpp
    Thirdparty/glm/glm/integer.hpp
    Thirdparty/glm/glm/mat2x2.hpp
    Thirdparty/glm/glm/mat2x3.hpp
    Thirdparty/glm/glm/mat2x4.hpp
    Thirdparty/glm/glm/mat3x2.hpp
    Thirdparty/glm/glm/mat3x3.hpp
    Thirdparty/glm/glm/mat3x4.hpp
    Thirdparty/glm/glm/mat4x2.hpp
    Thirdparty/glm/glm/mat4x3.hpp
    Thirdparty/glm/glm/mat4x4.hpp
    Thirdparty/glm/glm/matrix.hpp
    Thirdparty/glm/glm/packing.hpp
    Thirdparty/glm/glm/trigonometric.hpp
    Thirdparty/glm/glm/vec2.hpp
    Thirdparty/glm/glm/vec3.hpp
    Thirdparty/glm/glm/vec4.hpp
    Thirdparty/glm/glm/vector_relational.hpp
)

# target
add_library(spdlog STATIC "")
set_target_properties(spdlog PROPERTIES OUTPUT_NAME "spdlog")
set_target_properties(spdlog PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/binaries/target/windows/x64/debug")
target_include_directories(spdlog PRIVATE
    Thirdparty/spdlog/include
)
target_include_directories(spdlog INTERFACE
    Thirdparty/spdlog/include
)
target_compile_definitions(spdlog PRIVATE
    SPDLOG_COMPILED_LIB
)
target_compile_options(spdlog PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-D_DEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-D_DEBUG>
)
if(MSVC)
    target_compile_options(spdlog PRIVATE /EHsc)
else()
    target_compile_options(spdlog PRIVATE -fcxx-exceptions)
endif()
if(MSVC)
    set_property(TARGET spdlog PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(spdlog PRIVATE
    Thirdparty/spdlog/src/async.cpp
    Thirdparty/spdlog/src/bundled_fmtlib_format.cpp
    Thirdparty/spdlog/src/cfg.cpp
    Thirdparty/spdlog/src/color_sinks.cpp
    Thirdparty/spdlog/src/file_sinks.cpp
    Thirdparty/spdlog/src/spdlog.cpp
    Thirdparty/spdlog/src/stdout_sinks.cpp
    Thirdparty/spdlog/include/spdlog/async.h
    Thirdparty/spdlog/include/spdlog/async_logger-inl.h
    Thirdparty/spdlog/include/spdlog/async_logger.h
    Thirdparty/spdlog/include/spdlog/cfg/argv.h
    Thirdparty/spdlog/include/spdlog/cfg/env.h
    Thirdparty/spdlog/include/spdlog/cfg/helpers-inl.h
    Thirdparty/spdlog/include/spdlog/cfg/helpers.h
    Thirdparty/spdlog/include/spdlog/common-inl.h
    Thirdparty/spdlog/include/spdlog/common.h
    Thirdparty/spdlog/include/spdlog/details/backtracer-inl.h
    Thirdparty/spdlog/include/spdlog/details/backtracer.h
    Thirdparty/spdlog/include/spdlog/details/circular_q.h
    Thirdparty/spdlog/include/spdlog/details/console_globals.h
    Thirdparty/spdlog/include/spdlog/details/file_helper-inl.h
    Thirdparty/spdlog/include/spdlog/details/file_helper.h
    Thirdparty/spdlog/include/spdlog/details/fmt_helper.h
    Thirdparty/spdlog/include/spdlog/details/log_msg-inl.h
    Thirdparty/spdlog/include/spdlog/details/log_msg.h
    Thirdparty/spdlog/include/spdlog/details/log_msg_buffer-inl.h
    Thirdparty/spdlog/include/spdlog/details/log_msg_buffer.h
    Thirdparty/spdlog/include/spdlog/details/mpmc_blocking_q.h
    Thirdparty/spdlog/include/spdlog/details/null_mutex.h
    Thirdparty/spdlog/include/spdlog/details/os-inl.h
    Thirdparty/spdlog/include/spdlog/details/os.h
    Thirdparty/spdlog/include/spdlog/details/periodic_worker-inl.h
    Thirdparty/spdlog/include/spdlog/details/periodic_worker.h
    Thirdparty/spdlog/include/spdlog/details/registry-inl.h
    Thirdparty/spdlog/include/spdlog/details/registry.h
    Thirdparty/spdlog/include/spdlog/details/synchronous_factory.h
    Thirdparty/spdlog/include/spdlog/details/tcp_client-windows.h
    Thirdparty/spdlog/include/spdlog/details/tcp_client.h
    Thirdparty/spdlog/include/spdlog/details/thread_pool-inl.h
    Thirdparty/spdlog/include/spdlog/details/thread_pool.h
    Thirdparty/spdlog/include/spdlog/details/udp_client-windows.h
    Thirdparty/spdlog/include/spdlog/details/udp_client.h
    Thirdparty/spdlog/include/spdlog/details/windows_include.h
    Thirdparty/spdlog/include/spdlog/fmt/bin_to_hex.h
    Thirdparty/spdlog/include/spdlog/fmt/bundled/args.h
    Thirdparty/spdlog/include/spdlog/fmt/bundled/chrono.h
    Thirdparty/spdlog/include/spdlog/fmt/bundled/color.h
    Thirdparty/spdlog/include/spdlog/fmt/bundled/compile.h
    Thirdparty/spdlog/include/spdlog/fmt/bundled/core.h
    Thirdparty/spdlog/include/spdlog/fmt/bundled/format-inl.h
    Thirdparty/spdlog/include/spdlog/fmt/bundled/format.h
    Thirdparty/spdlog/include/spdlog/fmt/bundled/locale.h
    Thirdparty/spdlog/include/spdlog/fmt/bundled/os.h
    Thirdparty/spdlog/include/spdlog/fmt/bundled/ostream.h
    Thirdparty/spdlog/include/spdlog/fmt/bundled/printf.h
    Thirdparty/spdlog/include/spdlog/fmt/bundled/ranges.h
    Thirdparty/spdlog/include/spdlog/fmt/bundled/std.h
    Thirdparty/spdlog/include/spdlog/fmt/bundled/xchar.h
    Thirdparty/spdlog/include/spdlog/fmt/chrono.h
    Thirdparty/spdlog/include/spdlog/fmt/compile.h
    Thirdparty/spdlog/include/spdlog/fmt/fmt.h
    Thirdparty/spdlog/include/spdlog/fmt/ostr.h
    Thirdparty/spdlog/include/spdlog/fmt/ranges.h
    Thirdparty/spdlog/include/spdlog/fmt/std.h
    Thirdparty/spdlog/include/spdlog/fmt/xchar.h
    Thirdparty/spdlog/include/spdlog/formatter.h
    Thirdparty/spdlog/include/spdlog/fwd.h
    Thirdparty/spdlog/include/spdlog/logger-inl.h
    Thirdparty/spdlog/include/spdlog/logger.h
    Thirdparty/spdlog/include/spdlog/pattern_formatter-inl.h
    Thirdparty/spdlog/include/spdlog/pattern_formatter.h
    Thirdparty/spdlog/include/spdlog/sinks/android_sink.h
    Thirdparty/spdlog/include/spdlog/sinks/ansicolor_sink-inl.h
    Thirdparty/spdlog/include/spdlog/sinks/ansicolor_sink.h
    Thirdparty/spdlog/include/spdlog/sinks/base_sink-inl.h
    Thirdparty/spdlog/include/spdlog/sinks/base_sink.h
    Thirdparty/spdlog/include/spdlog/sinks/basic_file_sink-inl.h
    Thirdparty/spdlog/include/spdlog/sinks/basic_file_sink.h
    Thirdparty/spdlog/include/spdlog/sinks/callback_sink.h
    Thirdparty/spdlog/include/spdlog/sinks/daily_file_sink.h
    Thirdparty/spdlog/include/spdlog/sinks/dist_sink.h
    Thirdparty/spdlog/include/spdlog/sinks/dup_filter_sink.h
    Thirdparty/spdlog/include/spdlog/sinks/hourly_file_sink.h
    Thirdparty/spdlog/include/spdlog/sinks/kafka_sink.h
    Thirdparty/spdlog/include/spdlog/sinks/mongo_sink.h
    Thirdparty/spdlog/include/spdlog/sinks/msvc_sink.h
    Thirdparty/spdlog/include/spdlog/sinks/null_sink.h
    Thirdparty/spdlog/include/spdlog/sinks/ostream_sink.h
    Thirdparty/spdlog/include/spdlog/sinks/qt_sinks.h
    Thirdparty/spdlog/include/spdlog/sinks/ringbuffer_sink.h
    Thirdparty/spdlog/include/spdlog/sinks/rotating_file_sink-inl.h
    Thirdparty/spdlog/include/spdlog/sinks/rotating_file_sink.h
    Thirdparty/spdlog/include/spdlog/sinks/sink-inl.h
    Thirdparty/spdlog/include/spdlog/sinks/sink.h
    Thirdparty/spdlog/include/spdlog/sinks/stdout_color_sinks-inl.h
    Thirdparty/spdlog/include/spdlog/sinks/stdout_color_sinks.h
    Thirdparty/spdlog/include/spdlog/sinks/stdout_sinks-inl.h
    Thirdparty/spdlog/include/spdlog/sinks/stdout_sinks.h
    Thirdparty/spdlog/include/spdlog/sinks/syslog_sink.h
    Thirdparty/spdlog/include/spdlog/sinks/systemd_sink.h
    Thirdparty/spdlog/include/spdlog/sinks/tcp_sink.h
    Thirdparty/spdlog/include/spdlog/sinks/udp_sink.h
    Thirdparty/spdlog/include/spdlog/sinks/wincolor_sink-inl.h
    Thirdparty/spdlog/include/spdlog/sinks/wincolor_sink.h
    Thirdparty/spdlog/include/spdlog/sinks/win_eventlog_sink.h
    Thirdparty/spdlog/include/spdlog/spdlog-inl.h
    Thirdparty/spdlog/include/spdlog/spdlog.h
    Thirdparty/spdlog/include/spdlog/stopwatch.h
    Thirdparty/spdlog/include/spdlog/tweakme.h
    Thirdparty/spdlog/include/spdlog/version.h
)

# target
add_library(stb_image STATIC "")
set_target_properties(stb_image PROPERTIES OUTPUT_NAME "stb_image")
set_target_properties(stb_image PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/binaries/target/windows/x64/debug")
target_include_directories(stb_image PRIVATE
    Thirdparty/stb_image
)
target_include_directories(stb_image INTERFACE
    Thirdparty/stb_image
)
target_compile_options(stb_image PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-D_DEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-D_DEBUG>
)
if(MSVC)
    target_compile_options(stb_image PRIVATE /EHsc)
else()
    target_compile_options(stb_image PRIVATE -fcxx-exceptions)
endif()
if(MSVC)
    set_property(TARGET stb_image PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(stb_image PRIVATE
    Thirdparty/stb_image/stb_image.cpp
    Thirdparty/stb_image/stb_image.h
)

